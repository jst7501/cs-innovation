# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pids
*.pid
*.seed
*.pid.bkp

# Dependency directories
# Although Yarn PnP avoids creating node_modules in many cases, it's still
# best practice to ignore it for tooling and edge cases.
node_modules/


# Yarn - for modern Yarn (Berry / v2+)
#
# The following section is designed for Yarn Plug'n'Play (PnP).
# It's recommended to commit the Yarn binary, plugins, and the .pnp.cjs file
# to ensure consistent environments across all machines.
# The cache and unplugged packages are typically generated on `yarn install`.
#
# For "Zero-Installs", you would commit the cache as well. To do this,
# remove `.yarn/cache` from this file.
# See: https://yarnpkg.com/features/zero-installs
#
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions
!.yarnrc.yml

# These Plug'n'Play files should be committed.
!.pnp.cjs
!.pnp.loader.mjs

# These are generated during install and should be ignored.
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz


# Build & Compilation Output
# This includes native addon builds from tools like node-gyp
/build
/dist
/.out
/out

# Next.js build folder
.next/

# Test and coverage reports
coverage/
.nyc_output/

# Environment variables
.env
.env.local
.env.*.local

# Editor and IDE configuration
.vscode/*
!.vscode/settings.json
!.vscode/extensions.json
!.vscode/launch.json
.idea/

# OS-specific files
.DS_Store
Thumbs.db